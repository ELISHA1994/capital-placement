"""Add audit logs table for security compliance

Revision ID: 50121c073ff9
Revises: f4cfc66834b5
Create Date: 2025-10-04 03:13:26.258333

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '50121c073ff9'
down_revision: Union[str, Sequence[str], None] = 'f4cfc66834b5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('user_email', sa.String(length=255), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('api_key_id', sa.UUID(), nullable=True),
    sa.Column('resource_type', sa.String(length=100), nullable=False),
    sa.Column('resource_id', sa.String(length=255), nullable=True),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('ip_address', postgresql.INET(), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=False),
    sa.Column('risk_level', sa.String(length=20), nullable=False),
    sa.Column('suspicious', sa.String(length=20), nullable=False),
    sa.Column('event_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('logged_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('log_hash', sa.String(length=64), nullable=True),
    sa.Column('sequence_number', sa.Integer(), nullable=True),
    sa.Column('correlation_id', sa.String(length=255), nullable=True),
    sa.Column('batch_id', sa.String(length=255), nullable=True),
    sa.Column('error_code', sa.String(length=100), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_logs_batch_id'), ['batch_id'], unique=False)
        batch_op.create_index('ix_audit_logs_correlation', ['correlation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_correlation_id'), ['correlation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_event_timestamp'), ['event_timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_event_type'), ['event_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_logged_at'), ['logged_at'], unique=False)
        batch_op.create_index('ix_audit_logs_resource', ['resource_type', 'resource_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_resource_id'), ['resource_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_resource_type'), ['resource_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_risk_level'), ['risk_level'], unique=False)
        batch_op.create_index('ix_audit_logs_risk_time', ['risk_level', 'event_timestamp'], unique=False)
        batch_op.create_index('ix_audit_logs_sequence', ['tenant_id', 'sequence_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_session_id'), ['session_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_suspicious'), ['suspicious'], unique=False)
        batch_op.create_index('ix_audit_logs_tenant_event_time', ['tenant_id', 'event_type', 'event_timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_tenant_id'), ['tenant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_user_id'), ['user_id'], unique=False)
        batch_op.create_index('ix_audit_logs_user_time', ['user_id', 'event_timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_audit_logs_user_time')
        batch_op.drop_index(batch_op.f('ix_audit_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_tenant_id'))
        batch_op.drop_index('ix_audit_logs_tenant_event_time')
        batch_op.drop_index(batch_op.f('ix_audit_logs_suspicious'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_session_id'))
        batch_op.drop_index('ix_audit_logs_sequence')
        batch_op.drop_index('ix_audit_logs_risk_time')
        batch_op.drop_index(batch_op.f('ix_audit_logs_risk_level'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_resource_type'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_resource_id'))
        batch_op.drop_index('ix_audit_logs_resource')
        batch_op.drop_index(batch_op.f('ix_audit_logs_logged_at'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_event_type'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_event_timestamp'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_correlation_id'))
        batch_op.drop_index('ix_audit_logs_correlation')
        batch_op.drop_index(batch_op.f('ix_audit_logs_batch_id'))

    op.drop_table('audit_logs')
    # ### end Alembic commands ###
