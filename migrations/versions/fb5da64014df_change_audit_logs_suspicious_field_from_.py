"""Change audit_logs suspicious field from String to Boolean

Revision ID: fb5da64014df
Revises: de509fa3a179
Create Date: 2025-10-05 02:08:34.524144

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fb5da64014df'
down_revision: Union[str, Sequence[str], None] = 'de509fa3a179'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Convert VARCHAR to BOOLEAN with proper USING clause
    # Handle various possible string representations of boolean values
    op.execute("""
        ALTER TABLE audit_logs
        ALTER COLUMN suspicious
        TYPE BOOLEAN
        USING CASE
            WHEN LOWER(suspicious) IN ('true', 't', '1', 'yes', 'y') THEN TRUE
            WHEN LOWER(suspicious) IN ('false', 'f', '0', 'no', 'n', '') THEN FALSE
            ELSE FALSE
        END
    """)

    # Update the index
    op.drop_index('ix_audit_logs_suspicious', table_name='audit_logs')
    op.create_index('ix_audit_logs_suspicious', 'audit_logs', ['suspicious', 'event_timestamp'])

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the composite index
    op.drop_index('ix_audit_logs_suspicious', table_name='audit_logs')

    # Convert BOOLEAN back to VARCHAR
    op.execute("""
        ALTER TABLE audit_logs
        ALTER COLUMN suspicious
        TYPE VARCHAR(20)
        USING CASE
            WHEN suspicious = TRUE THEN 'true'
            WHEN suspicious = FALSE THEN 'false'
            ELSE 'false'
        END
    """)

    # Recreate the original single-column index
    op.create_index('ix_audit_logs_suspicious', 'audit_logs', ['suspicious'])

    # ### end Alembic commands ###
