"""Add search_history table with analytics indexes

Revision ID: 1a047a9c676a
Revises: 5fea2beeb836
Create Date: 2025-10-13 11:50:01.691416

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1a047a9c676a'
down_revision: Union[str, Sequence[str], None] = '5fea2beeb836'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('search_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('query_text', sa.Text(), nullable=False),
    sa.Column('search_mode', sa.String(length=50), nullable=False),
    sa.Column('search_parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('total_results', sa.Integer(), nullable=False),
    sa.Column('returned_results', sa.Integer(), nullable=False),
    sa.Column('results_summary', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('search_duration_ms', sa.Integer(), nullable=False),
    sa.Column('cache_hit', sa.Boolean(), nullable=False),
    sa.Column('performance_metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('search_outcome', sa.String(length=20), nullable=False),
    sa.Column('results_clicked', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('profiles_contacted', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('engagement_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('engagement_score', sa.Float(), nullable=False),
    sa.Column('search_context', sa.String(length=200), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('executed_at', sa.DateTime(), nullable=False),
    sa.Column('last_interaction_at', sa.DateTime(), nullable=True),
    sa.Column('extra_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('search_history', schema=None) as batch_op:
        batch_op.create_index('idx_search_history_analytics', ['tenant_id', 'executed_at', 'search_outcome'], unique=False)
        batch_op.create_index('idx_search_history_outcome', ['search_outcome'], unique=False)
        batch_op.create_index('idx_search_history_query_text', ['query_text'], unique=False)
        batch_op.create_index('idx_search_history_tenant_executed', ['tenant_id', 'executed_at'], unique=False)
        batch_op.create_index('idx_search_history_tenant_user', ['tenant_id', 'user_id'], unique=False)
        batch_op.create_index('idx_search_history_user_executed', ['user_id', 'executed_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_history_cache_hit'), ['cache_hit'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_history_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_history_engagement_score'), ['engagement_score'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_history_executed_at'), ['executed_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_history_query_text'), ['query_text'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_history_search_duration_ms'), ['search_duration_ms'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_history_search_mode'), ['search_mode'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_history_search_outcome'), ['search_outcome'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_history_tenant_id'), ['tenant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_history_total_results'), ['total_results'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_history_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('search_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_search_history_user_id'))
        batch_op.drop_index(batch_op.f('ix_search_history_total_results'))
        batch_op.drop_index(batch_op.f('ix_search_history_tenant_id'))
        batch_op.drop_index(batch_op.f('ix_search_history_search_outcome'))
        batch_op.drop_index(batch_op.f('ix_search_history_search_mode'))
        batch_op.drop_index(batch_op.f('ix_search_history_search_duration_ms'))
        batch_op.drop_index(batch_op.f('ix_search_history_query_text'))
        batch_op.drop_index(batch_op.f('ix_search_history_executed_at'))
        batch_op.drop_index(batch_op.f('ix_search_history_engagement_score'))
        batch_op.drop_index(batch_op.f('ix_search_history_created_at'))
        batch_op.drop_index(batch_op.f('ix_search_history_cache_hit'))
        batch_op.drop_index('idx_search_history_user_executed')
        batch_op.drop_index('idx_search_history_tenant_user')
        batch_op.drop_index('idx_search_history_tenant_executed')
        batch_op.drop_index('idx_search_history_query_text')
        batch_op.drop_index('idx_search_history_outcome')
        batch_op.drop_index('idx_search_history_analytics')

    op.drop_table('search_history')
    # ### end Alembic commands ###
