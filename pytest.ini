[tool:pytest]
# Pytest configuration for hexagonal architecture testing

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=80
    --junit-xml=test-results.xml
    -v

# Test markers for organizing tests by hexagonal architecture layers
markers =
    unit: Unit tests (fast, isolated, no external dependencies)
    integration: Integration tests (test component interactions)
    e2e: End-to-end tests (full system tests)
    slow: Slow tests (performance tests, large datasets)
    tenant_isolation: Tests specifically for tenant data isolation
    auth_flow: Authentication and authorization flow tests
    domain: Domain logic tests (pure business rules)
    application: Application workflow tests
    infrastructure: Infrastructure adapter tests
    repository: Repository implementation tests
    cache: Cache-related tests
    notification: Notification service tests
    provider: Provider pattern tests
    security: Security-related tests
    performance: Performance and load tests

# Async test configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = app
omit = 
    app/main.py
    app/database/migrations/*
    app/tests/*
    */test_*.py
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# HTML coverage report
[coverage:html]
directory = htmlcov
title = Capital Placement Test Coverage Report